name: Veracode Software Composition Analysis

run-name: Software Composition Analysis - ${{ github.event.client_payload.repository.name }}

concurrency:
  group: ${{ github.event.client_payload.event_type }}-${{ github.event.client_payload.repository.name }}-${{ github.event.client_payload.repository.branch }}
  cancel-in-progress: true

on:
  repository_dispatch:
    types: [veracode-sca-scan]
    
jobs:
  register:
    uses: ./.github/workflows/veracode-check-run.yml
    with:
      check_run_name: ${{ github.workflow }}
      head_sha: ${{ github.event.client_payload.sha }}
      repositroy_owner: ${{ github.event.client_payload.repository.owner }}
      repositroy_name: ${{ github.event.client_payload.repository.name }}
      event_type: ${{ github.event.client_payload.event_type }}
      github_token: ${{ github.event.client_payload.token }}
      run_id: ${{ github.run_id }}
      branch: ${{ github.event.client_payload.repository.branch }}
       
  veracode-sca-scan:
    needs: [register]
    runs-on: ubuntu-latest
    name: Veracode Component Analysis

    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.repository.full_name }}
          ref: ${{ github.event.client_payload.repository.branch }}
          token: ${{ github.event.client_payload.token }}
      - name: Run Veracode SCA
        env:
          SRCCLR_API_TOKEN: ${{ secrets.VERACODE_AGENT_TOKEN }}
        uses: veracode/veracode-sca@v2.1.11
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          create-issues: false  
#           fail-on-cvss: 1
#           min-cvss-for-issue: 1
